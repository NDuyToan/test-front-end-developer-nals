{"version":3,"file":"static/js/255.c743806f.chunk.js","mappings":"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","sources":["webpack://toan-nguyen-nals/./src/pages/UpdateBlog.module.scss?27a5","pages/UpdateBlog.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"updateContainer\":\"UpdateBlog_updateContainer__8cx7t\",\"title\":\"UpdateBlog_title__aU4CL\",\"note\":\"UpdateBlog_note__ZS2G-\"};","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Button, Space, Form, Input, Upload, message, Skeleton } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport type { RcFile, UploadFile, UploadProps } from \"antd/es/upload/interface\";\r\nimport type { AppDispatch, RootState } from \"../store\";\r\nimport type { BlogType } from \"../services/data\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { SubmitBlog } from \"../services/data\";\r\nimport { getBlogById, createNewBlog, editBlog } from \"../store/blog/slice\";\r\n\r\nimport styles from \"./UpdateBlog.module.scss\";\r\n\r\nconst UpdateBlog: React.FC = () => {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\r\n  const [form] = Form.useForm();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { status, isSaving } = useSelector((state: RootState) => state.blog);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    id === undefined ? setIsEdit(false) : setIsEdit(true);\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (id !== undefined) {\r\n      dispatch(getBlogById(id))\r\n        .unwrap()\r\n        .then((response: BlogType) => {\r\n          form.setFieldsValue(response);\r\n        })\r\n        .catch((error: string) => {\r\n          message.error(error);\r\n        });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id, dispatch]);\r\n\r\n  const propsImage: UploadProps = {\r\n    onRemove: (file) => {\r\n      const index = fileList.indexOf(file);\r\n      const newFileList = fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      setFileList(newFileList);\r\n    },\r\n    beforeUpload: (file: RcFile) => {\r\n      const isJpgOrPng =\r\n        file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n      if (!isJpgOrPng) {\r\n        message.error(\"You can only upload JPG/PNG file!\");\r\n      }\r\n\r\n      const isLt5M = file.size / 1024 / 1024 < 5;\r\n      if (!isLt5M) {\r\n        message.error(\"Image must smaller than 5MB!\");\r\n      }\r\n\r\n      if (isJpgOrPng && isLt5M) {\r\n        setFileList([file]);\r\n      }\r\n\r\n      return false;\r\n    },\r\n    fileList,\r\n  };\r\n\r\n  const handleEditBlog = (values: SubmitBlog) => {\r\n    const dataSubmit = {\r\n      title: values.title,\r\n      content: values.content,\r\n      image: fileList[0],\r\n      id,\r\n    };\r\n\r\n    dispatch(editBlog(dataSubmit))\r\n      .unwrap()\r\n      .then(() => {\r\n        message.success(\"Edit blog successfully\");\r\n        navigate(\"/\");\r\n      })\r\n      .catch((err: string) => {\r\n        message.error(err);\r\n      });\r\n  };\r\n\r\n  const handleCreateNewBlog = (values: SubmitBlog) => {\r\n    const dataSubmit = {\r\n      title: values.title,\r\n      content: values.content,\r\n      image: fileList[0],\r\n    };\r\n\r\n    dispatch(createNewBlog(dataSubmit))\r\n      .unwrap()\r\n      .then(() => {\r\n        message.success(\"Create a new blog successfully\");\r\n        navigate(\"/\");\r\n      })\r\n      .catch((err: string) => {\r\n        message.error(err);\r\n      });\r\n  };\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n    setFileList([]);\r\n  };\r\n\r\n  return (\r\n    <Skeleton loading={status === \"loading\"}>\r\n      <div className={styles.updateContainer}>\r\n        {!isEdit ? (\r\n          <h2 className={styles.title}> Create new blog</h2>\r\n        ) : (\r\n          <h2 className={styles.title}> Edit blog</h2>\r\n        )}\r\n\r\n        <Form\r\n          name=\"updateBlog\"\r\n          layout=\"vertical\"\r\n          form={form}\r\n          labelCol={{ span: 8 }}\r\n          wrapperCol={{ span: 24 }}\r\n          onFinish={isEdit ? handleEditBlog : handleCreateNewBlog}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            label=\"Title\"\r\n            name=\"title\"\r\n            rules={[{ required: true, message: \"Please input Title!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Content\"\r\n            name=\"content\"\r\n            rules={[{ required: true, message: \"Please input Content!\" }]}\r\n          >\r\n            <Input.TextArea rows={5} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Photo\" name=\"image\">\r\n            <Upload\r\n              {...propsImage}\r\n              listType=\"picture\"\r\n              maxCount={1}\r\n              defaultFileList={[...fileList]}\r\n            >\r\n              <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n              <span className={styles.note}>(You can only upload 1 photo)</span>\r\n            </Upload>\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ span: 24 }}>\r\n            <Space>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                size=\"large\"\r\n                loading={isSaving}\r\n              >\r\n                Save\r\n              </Button>\r\n              <Button htmlType=\"button\" onClick={onReset} size=\"large\">\r\n                Reset\r\n              </Button>\r\n              <Button\r\n                type=\"link\"\r\n                htmlType=\"button\"\r\n                onClick={() => {\r\n                  navigate(\"/\");\r\n                }}\r\n                size=\"large\"\r\n              >\r\n                Go Back Home\r\n              </Button>\r\n            </Space>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </Skeleton>\r\n  );\r\n};\r\n\r\nexport default UpdateBlog;\r\n"],"names":["useState","isEdit","setIsEdit","fileList","setFileList","Form","form","navigate","useNavigate","dispatch","useDispatch","useSelector","state","blog","status","isSaving","id","useParams","useEffect","undefined","getBlogById","unwrap","then","response","setFieldsValue","catch","error","message","propsImage","onRemove","file","index","indexOf","newFileList","slice","splice","beforeUpload","isJpgOrPng","type","isLt5M","size","loading","className","styles","name","layout","labelCol","span","wrapperCol","onFinish","values","dataSubmit","title","content","image","editBlog","err","createNewBlog","autoComplete","label","rules","required","rows","listType","maxCount","defaultFileList","icon","UploadOutlined","htmlType","onClick","resetFields"],"sourceRoot":""}